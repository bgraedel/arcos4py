[tool]
[tool.poetry]
name = "arcos4py"
version = "0.2.4"
homepage = "https://github.com/bgraedel/arcos4py"
description = "A python package to detect collective spatio-temporal phenomena."
authors = ["Benjamin Graedel <benjamin.graedel@unibe.ch>"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',

]
packages = [
    { include = "arcos4py" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = "^3.9.1"
numpy = ">=1.23"
matplotlib = ">=3.6"
scikit-learn = ">=1.3.0"
scipy = ">=1.9"
pandas = ">=1.4.0"
kneed = ">=0.7.0"
tqdm = "^4.64.1"
joblib = "^1.2.0"
pulp = "^2.7.0"
scikit-image = [
    { version = ">=0.20.0", python = "< 3.12" },
    { version = "^0.22.0", python = ">= 3.12" }
]
seaborn = "^0.13.2"
black  = { version = "^24.1.1", optional = true}
isort  = { version = "^5.8.0", optional = true}
flake8  = { version = "^3.9.2", optional = true}
flake8-docstrings = { version = "^1.6.0", optional = true }
mypy = {version = "^0.981", optional = true}
pytest  = {version = "^8.0.0", optional = true}
pytest-cov  = { version = "^2.12.0", optional = true}
tox  = { version = "^3.20.1", optional = true}
virtualenv  = { version = "^20.2.2", optional = true}
mkdocs  = { version = "^1.3.0", optional = true}
mkdocs-include-markdown-plugin  = { version = "^3.3.0", optional = true}
mkdocs-material  = { version = "^9.5.9", optional = true}
mkdocstrings-python = {version = "^1.2.1", optional = true}
mkdocs-material-extensions  = { version = "^1.0.3", optional = true}
twine  = { version = "^3.3.0", optional = true}
mkdocs-autorefs = "^0.5.0"
pre-commit = {version = "^2.12.0", optional = true}
toml = {version = "^0.10.2", optional = true}
bump2version = {version = "^1.0.1", optional = true}
PyYAML = { version = "^6.0", optional = true}

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "mypy",
    "flake8",
    "flake8-docstrings",
    "pytest-cov",
    "PyYAML"
    ]

dev = ["tox", "pre-commit", "virtualenv", "twine", "toml", "bump2version"]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings-python",
    "mkdocs-material-extensions",
    "mkdocs-autorefs",
    ]

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
