[project]
name = "arcos4py"
version = "0.3.2"
description = "A python package to detect collective spatio-temporal phenomena."
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Benjamin Graedel", email = "benjamin.graedel@unibe.ch" },
]
classifiers     = [
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.10"
urls            = { Homepage = "https://github.com/pertzlab/arcos4py" }

dependencies = [
    "numpy>=1.23",
    "matplotlib>=3.6",
    "scikit-learn>=1.3.0",
    "scipy>=1.9",
    "pandas>=1.4.0",
    "kneed>=0.7.0",
    "tqdm>=4.64.1",
    "joblib>=1.2.0",
    "scikit-image>=0.22.0",
    "seaborn>=0.13.2",
    "pot>=0.9.4",
    "numba>=0.60.0",
]

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "black>=24.1.1",
    "isort>=5.8.0",
    "mypy>=0.981",
    "flake8>=3.9.2",
    "flake8-docstrings>=1.6.0",
    "pytest-cov>=2.12.0",
    "PyYAML>=6.0",
]
dev  = [
    "tox>=3.20.1",
    "pre-commit>=2.12.0",
    "virtualenv>=20.2.2",
    "twine>=3.3.0",
    "toml>=0.10.2",
    "bump2version>=1.0.1",
]
doc  = [
    "mkdocs>=1.3.0",
    "mkdocs-include-markdown-plugin>=3.3.0",
    "mkdocs-material>=9.5.9",
    "mkdocstrings-python>=1.2.1",
    "mkdocs-material-extensions>=1.0.3",
    "mkdocs-autorefs>=0.5.0",
]


[tool.poetry]
packages = [
    { include = "arcos4py" },
    { include = "tests", format = "sdist" },
]

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
